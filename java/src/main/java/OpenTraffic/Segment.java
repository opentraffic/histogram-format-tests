// automatically generated by the FlatBuffers compiler, do not modify

package OpenTraffic;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Segment extends Table {
  public static Segment getRootAsSegment(ByteBuffer _bb) { return getRootAsSegment(_bb, new Segment()); }
  public static Segment getRootAsSegment(ByteBuffer _bb, Segment obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Segment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long segmentId() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long nextSegmentIds(int j) { int o = __offset(6); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int nextSegmentIdsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer nextSegmentIdsAsByteBuffer() { return __vector_as_bytebuffer(6, 4); }
  public Entry entries(int j) { return entries(new Entry(), j); }
  public Entry entries(Entry obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o) + j * 8, bb) : null; }
  public int entriesLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createSegment(FlatBufferBuilder builder,
      long segment_id,
      int next_segment_idsOffset,
      int entriesOffset) {
    builder.startObject(3);
    Segment.addEntries(builder, entriesOffset);
    Segment.addNextSegmentIds(builder, next_segment_idsOffset);
    Segment.addSegmentId(builder, segment_id);
    return Segment.endSegment(builder);
  }

  public static void startSegment(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addSegmentId(FlatBufferBuilder builder, long segmentId) { builder.addInt(0, (int)segmentId, (int)0L); }
  public static void addNextSegmentIds(FlatBufferBuilder builder, int nextSegmentIdsOffset) { builder.addOffset(1, nextSegmentIdsOffset, 0); }
  public static int createNextSegmentIdsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startNextSegmentIdsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addEntries(FlatBufferBuilder builder, int entriesOffset) { builder.addOffset(2, entriesOffset, 0); }
  public static void startEntriesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 4); }
  public static int endSegment(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

